function init() {

    var canvas = document.getElementById("game");
    var ctx = canvas.getContext('2d');
    var img = document.getElementById("a-img");

    ctx.drawImage(img, 10, 10);
    /*Использование изображений
    https://developer.mozilla.org/ru/docs/Web/API/Canvas_API/Tutorial/%D0%98%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5_%D0%B8%D0%B7%D0%BE%D0%B1%D1%80%D0%B0%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9

        Если у вас есть изображение (обычно png, jpg), вы можете рисовать на canvas это изображение или его части.
        Можно при рисовании применять эффекты по изменению формы и цвета.

        Как загрузить
    Вставить изображение в HTML и дождаться, когда оно загрузится вместе со страницей. Мы используем событие onload,
    чтобы начать выполнять скрипт, и мы можем быть уверены, что когда событие произошло и скрипт начал выполняться,
    наше изображение уже загружено.
        в HTML надо сделать тег <img src=”a.png” id=”a-img”>
    в CSS можно написать что-то типа img {display:none;}
    в JS: var aImg = document.getElementById(“a-img”);
    Изображение можно загрузить программно:
        var img = new Image();
    img.src = “ссылка на картинку”;
    Но в этом случае изображение загрузится не сразу, и при попытке его нарисовать ничего не будет видно

    Как дождаться по-нормальному загрузки картинки - обсудим потом. Или используйте библиотеку preloadjs из набора
     библиотек CreateJS, который изучим позже.

        Когда изображение загружено, его можно рисовать:

        ctx - контекст для рисования
    ctx.drawImage(img, x, y); //что рисовать и где.
    //можно указать размер нового изображения
    ctx.drawImage(img, x, y, width, height);
//можно указать еще больше параметров:
    drawImage(
        image,          что рисовать
    sx, sy,         координаты на исходной картинке (source)
    sWidth, sHeight, размер на исходной картинке
    dx, dy,		координаты на Canvas (destination)
    dWidth, dHeight размер на Canvas
)*/


}